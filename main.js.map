{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/contacts-list/contact-detail.component.html","webpack:///./src/app/contacts-list/contact-detail.component.ts","webpack:///./src/app/contacts-list/contact-list.component.css","webpack:///./src/app/contacts-list/contact-list.component.html","webpack:///./src/app/contacts-list/contact-list.component.ts","webpack:///./src/app/pipes/filter.pipe.ts","webpack:///./src/app/services/contact-list.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule,Routes } from '@angular/router';\r\nimport { ContactListComponent } from './contacts-list/contact-list.component';\r\n\r\nconst _routes: Routes =[\r\n{ path: '', component: ContactListComponent},\r\n// { path: '**', redirectTo: '' ,pathMath: 'full'}\r\n];\r\n\r\n@NgModule({\r\n\timports: [CommonModule,RouterModule.forRoot(_routes)],\r\n\texports: [RouterModule]\r\n})\r\n\r\nexport class AppRoutingModule{}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<nav class=\\\"navbar navbar-light bg-light\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Contact List</a>\\n</nav>\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'contactList';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { ContactListComponent } from './contacts-list/contact-list.component';\nimport { ContactDetailComponent } from './contacts-list/contact-detail.component';\nimport { ContactListService } from './services/contact-list.service';\nimport { AppRoutingModule } from './app-routing.module';\nimport { FilterPipe } from './pipes/filter.pipe';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ContactListComponent,\n    ContactDetailComponent,\n\tFilterPipe\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [ContactListService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<div *ngIf=\\\"selectedContact\\\">\\r\\n    <table class=\\\"table table-bordered\\\">\\r\\n    <tr>\\r\\n        <th>E-mail Address</th>\\r\\n        <td>{{ selectedContact['E-mail Address'] ? selectedContact['E-mail Address'] : 'NA'}}</td>\\r\\n    </tr>\\r\\n\\r\\n    <!-- <tr>\\r\\n        <th>Related name</th>\\r\\n        <td>{{ selectedContact['Related name'] ? selectedContact['Related name'] : 'NA'}}</td>\\r\\n    </tr>\\r\\n\\r\\n    <tr>\\r\\n        <th>Home Address</th>\\r\\n        <td>{{ selectedContact['Home Address 2'] ? selectedContact['Home Address 2'] : 'NA'}}</td>\\r\\n    </tr>\\r\\n\\r\\n    <tr>\\r\\n        <th>Anniversary</th>\\r\\n        <td>{{ selectedContact['Anniversary'] ? selectedContact['Anniversary'] : 'NA'}}</td>\\r\\n    </tr>\\r\\n-->\\r\\n    <tr>\\r\\n        <th>First Name</th>\\r\\n        <td>{{ selectedContact['First Name'] ? selectedContact['First Name'] : 'NA'}}</td>\\r\\n    </tr>\\r\\n\\r\\n    <tr>\\r\\n        <th>Last Name</th>\\r\\n        <td>{{ selectedContact['Last Name'] ? selectedContact['Last Name'] : 'NA'}}</td>\\r\\n    </tr>\\r\\n\\r\\n    <tr>\\r\\n        <th>Business Address</th>\\r\\n        <td>{{ selectedContact['Business Address 2'] ? selectedContact['Business Address 2'] : 'NA'}}</td>\\r\\n    </tr>\\r\\n\\r\\n    <tr>\\r\\n        <th>Department</th>\\r\\n        <td>{{ selectedContact['Department'] ? selectedContact['Department'] : 'NA'}}</td>\\r\\n    </tr>\\r\\n\\r\\n    <tr>\\r\\n        <th>Display Name</th>\\r\\n        <td>{{ selectedContact['Display Name'] ? selectedContact['Display Name'] : 'NA'}}</td>\\r\\n    </tr>\\r\\n\\r\\n    <tr>\\r\\n        <th>Country</th>\\r\\n        <td>{{ selectedContact['Business Country'] ? selectedContact['Business Country'] : 'NA'}}</td>\\r\\n    </tr>\\r\\n\\r\\n    <tr>\\r\\n        <th>Home Phone</th>\\r\\n        <td>{{ selectedContact['Home Phone'] ? selectedContact['Home Phone'] : 'NA'}}</td>\\r\\n    </tr>\\r\\n\\r\\n    <tr>\\r\\n        <th>Country Code</th>\\r\\n        <td>{{ selectedContact['Country Code'] ? selectedContact['Country Code'] : 'NA'}}</td>\\r\\n    </tr>\\r\\n    <tr><td colspan=\\\"2\\\"><button type=\\\"button\\\" class=\\\"btn\\\">edit</button></td></tr>\\r\\n    </table>\\r\\n</div>\\r\\n\"","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n\tselector: 'app-contact-detail',\r\n\ttemplateUrl: 'contact-detail.component.html'\r\n})\r\n\r\nexport class ContactDetailComponent{\r\n\r\n\t@Input() selectedContact\r\n}","module.exports = \".avatar {\\r\\n    vertical-align: middle;\\r\\n    width: 50px;\\r\\n    height: 50px;\\r\\n    border-radius: 50%;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29udGFjdHMtbGlzdC9jb250YWN0LWxpc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLHVCQUF1QjtJQUN2QixZQUFZO0lBQ1osYUFBYTtJQUNiLG1CQUFtQjtDQUN0QiIsImZpbGUiOiJzcmMvYXBwL2NvbnRhY3RzLWxpc3QvY29udGFjdC1saXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYXZhdGFyIHtcclxuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbiAgICB3aWR0aDogNTBweDtcclxuICAgIGhlaWdodDogNTBweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxufSJdfQ== */\"","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-lg-3\\\">\\r\\n        <div class=\\\"form-inline\\\">\\r\\n              <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" placeholder=\\\"Search\\\" aria-label=\\\"Search\\\" style=\\\"width:291px;\\\" [(ngModel)] = \\\"searchKeyword\\\" (keyup)=\\\"searchContact()\\\" placeholder=\\\"search by name or phone number\\\">\\r\\n        </div>\\r\\n    <div class=\\\"clear\\\"></div>\\r\\n    <div style=\\\"background-color: lavender;padding-top: 5px;padding-bottom: 5px;width: 100%; height: 80vh;overflow-y: scroll;\\\">   \\r\\n    <ul class=\\\"list-group\\\" *ngIf=\\\"contactsList\\\">\\r\\n    <li style=\\\"cursor: pointer;\\\" *ngFor=\\\"let contact of contactsList | filter : searchKeyword\\\" class=\\\"list-group-item\\\" [class.active]=\\\"contact==selectedContact\\\" (click)=\\\"getDetails(contact)\\\"><img src=\\\"https://www.w3schools.com/bootstrap/img_avatar2.png\\\" alt=\\\"Avatar\\\" class=\\\"avatar\\\"> &nbsp;{{contact[\\\"First Name\\\"]+ \\\" \\\"+ contact[\\\"Last Name\\\"]}}</li>\\r\\n    \\r\\n  </ul>\\r\\n  </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-lg-6\\\" style=\\\"background-color: lavenderblush;\\\">\\r\\n     \\r\\n       <app-contact-detail *ngIf=\\\"selectedContact\\\" [selectedContact] = \\\"selectedContact\\\"></app-contact-detail>\\r\\n  \\r\\n     </div>\\r\\n  \\r\\n      \\r\\n      \\r\\n    </div>\\r\\n  </div>\"","import { Component,OnInit } from '@angular/core';\r\nimport { ContactListService } from '../services/contact-list.service';\r\n\r\n\r\n@Component({\r\n\tselector: 'app-contact-list',\r\n\ttemplateUrl: 'contact-list.component.html',\r\n\tstyleUrls: ['contact-list.component.css']\r\n})\r\n\r\n\r\nexport class ContactListComponent{\r\n\r\n\tcontactsList: any;\r\n\tselectedContact: any;\r\n\tloading: boolean = false;\r\n\tsearchKeyword: string;\r\n\tconstructor(private _contactListService: ContactListService){}\r\n\r\n\tgetContactList(){\r\n\t\tthis._contactListService.getContactList()\r\n\t\t.subscribe(res => this.contactsList = res)\r\n\r\n\t}\r\n\r\n\tngOnInit(){\r\n\t\tthis.getContactList();\r\n\t}\r\n\r\n\tgetDetails(data: any){\r\n\t\tthis.selectedContact = data;\r\n\t}\r\n\r\n\tsearchContact(){\r\n     this._contactListService.searchContactList(this.searchKeyword)\r\n     .subscribe(res => this.contactsList = res);\r\n\r\n\r\n\t}\r\n\t\r\n}","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'filter'\r\n})\r\n\r\nexport class FilterPipe implements PipeTransform {\r\n  transform(items: any[], searchText: string): any[] {\r\n    if(!items) return [];\r\n    if(!searchText) return items;\r\n\r\nsearchText = searchText.toLowerCase();\r\nconst matchBy = ['First Name','Home Phone'];\r\nreturn items.filter( it => {\r\n\tfor (var key in matchBy) {\r\n\tif(it[matchBy[key]].toLowerCase().indexOf(searchText) != -1){\r\n      return (it[matchBy[key]].toLowerCase().includes(searchText) );\r\n\t}\r\n\t}\r\n    });\r\n   }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n//import 'rxjs/add/operator/filter';\r\n//import 'rxjs/add/operator/map';\r\n//import 'rxjs/add/operator/catch';\r\n\r\n@Injectable()\r\n\r\nexport class ContactListService{\r\n\r\n\tprivate _apiUrl = \"../../assets/contactList.json\";\r\n\tconstructor(private _contactsService: HttpClient){}\r\n\r\n\tgetContactList(): Observable<any>{\r\n\t\treturn this._contactsService.get(this._apiUrl);\r\n\t}\r\n\r\n\r\n\tsearchContactList(param: string): Observable<any>{\r\n\t\treturn this._contactsService.get(this._apiUrl);\r\n\t}\r\n\r\n\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}